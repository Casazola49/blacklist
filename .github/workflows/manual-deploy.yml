name: Manual Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production
      skip_tests:
        description: 'Skip tests'
        required: false
        default: false
        type: boolean
      skip_functions:
        description: 'Skip Cloud Functions deployment'
        required: false
        default: false
        type: boolean
      skip_health_check:
        description: 'Skip health check'
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: '18'
  FIREBASE_PROJECT_ID: 'the-blacklist-879f1'

jobs:
  manual-deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        if: ${{ github.event.inputs.skip_tests == 'false' }}
        run: |
          npm run test:unit
          npm run test:integration
          npm run test:security

      - name: Build application
        run: npm run build:${{ github.event.inputs.environment }}
        env:
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
          VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}
          VITE_APP_ENVIRONMENT: ${{ github.event.inputs.environment }}

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          projectId: '${{ env.FIREBASE_PROJECT_ID }}'
          channelId: ${{ github.event.inputs.environment == 'production' && 'live' || 'staging' }}
          target: ${{ github.event.inputs.environment }}

      - name: Deploy Cloud Functions
        if: ${{ github.event.inputs.skip_functions == 'false' }}
        run: |
          npm install -g firebase-tools
          firebase deploy --only functions --token "${{ secrets.FIREBASE_TOKEN }}"

      - name: Run health check
        if: ${{ github.event.inputs.skip_health_check == 'false' }}
        run: |
          sleep 10
          node scripts/health-check.js ${{ github.event.inputs.environment }}

      - name: Upload deployment artifacts
        uses: actions/upload-artifact@v3
        with:
          name: deployment-${{ github.event.inputs.environment }}-${{ github.run_number }}
          path: |
            dist/
            health-check-results.json